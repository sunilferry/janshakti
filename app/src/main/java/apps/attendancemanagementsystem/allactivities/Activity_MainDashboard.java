package apps.attendancemanagementsystem.allactivities;import android.annotation.SuppressLint;import android.app.Dialog;import android.content.Intent;import android.icu.text.SimpleDateFormat;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.PopupMenu;import android.widget.RelativeLayout;import android.widget.TextView;import androidx.annotation.Nullable;import androidx.appcompat.app.AlertDialog;import androidx.appcompat.app.AppCompatActivity;import androidx.cardview.widget.CardView;import java.util.Calendar;import java.util.Date;import java.util.Locale;import apps.attendancemanagementsystem.R;import apps.attendancemanagementsystem.activity.LoginActivity;import apps.attendancemanagementsystem.utils.AppSession;import apps.attendancemanagementsystem.utils.CheckView;import apps.attendancemanagementsystem.utils.Cons;import apps.attendancemanagementsystem.utils.Utilities;public class Activity_MainDashboard extends AppCompatActivity implements View.OnClickListener {    private Utilities utilities;    private AppSession appSession;    private ImageView iv_choose;//    private RelativeLayout view_profile_rel,other_attendance_rel;    private CardView punch_attendance_rel, view_attendance_rel,view_profile_rel,other_attendance_rel;    private TextView tv_userName, tv_currentDate, tv_currentTime;    private String currentDatestr = "";    @SuppressLint({"SimpleDateFormat", "SetTextI18n", "NewApi"})    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_maindashboard);        utilities = Utilities.getInstance(this);        appSession = new AppSession(this);        iv_choose = findViewById(R.id.iv_choose);        tv_userName = findViewById(R.id.tv_userName);        tv_currentDate = findViewById(R.id.tv_currentDate);        tv_currentTime = findViewById(R.id.tv_currentTime);        punch_attendance_rel = findViewById(R.id.punch_attendance_rel);        view_attendance_rel = findViewById(R.id.view_attendance_rel);        view_profile_rel = findViewById(R.id.view_profile_rel);        other_attendance_rel = findViewById(R.id.other_attendance_rel);        tv_userName.setText(appSession.getUsername());        iv_choose.setOnClickListener(this);        punch_attendance_rel.setOnClickListener(this);        view_attendance_rel.setOnClickListener(this);        view_profile_rel.setOnClickListener(this);        other_attendance_rel.setOnClickListener(this);        SimpleDateFormat simpleDateFormatIN = null;//        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            simpleDateFormatIN = new SimpleDateFormat("dd/MM/yyyy");            currentDatestr = simpleDateFormatIN.format(new Date());            Log.e("currentDatestr", "currentDateandTime:" + currentDatestr);            tv_currentDate.setText("Date : " + currentDatestr);//        }        Calendar c = Calendar.getInstance();        SimpleDateFormat simpleDateFormatOut = null;        simpleDateFormatOut = new SimpleDateFormat("HH:mm:ss aa", Locale.ENGLISH);            String formattedDate = simpleDateFormatOut.format(c.getTime());            formattedDate = formattedDate.replace("a.m.", "AM").replace("p.m.", "PM");            Log.e("formattedDate", "formattedDate:" + formattedDate);            tv_currentTime.setText("Time : " + formattedDate);//        }    }    @Override    public void onClick(View view) {        if (view.getId() == R.id.punch_attendance_rel) {            Intent pucnhAttendance = new Intent(this, Activity_Punch_Attendence.class);            startActivity(pucnhAttendance);        }        if (view.getId() == R.id.view_attendance_rel) {//           AlertDialog.Builder builder = new AlertDialog.Builder(Activity_MainDashboard.this);//            builder.setMessage("Work Under Process, it'll see you soon ");//            builder.setPositiveButton("OK", (dialog, which) -> dialog.dismiss());//            builder.create();//            builder.show();            Intent pucnhAttendance = new Intent(this, Activity_PreviousAttendence.class);//            Intent pucnhAttendance = new Intent(this, democalendar.class);            startActivity(pucnhAttendance);        }        if (view.getId() == R.id.view_profile_rel) {            Intent pucnhAttendance = new Intent(this, Activity_Profile.class);            startActivity(pucnhAttendance);        }        if (view.getId() == R.id.other_attendance_rel) {            Intent pucnhAttendance = new Intent(this, Activity_Punch_Others_Attendence.class);            startActivity(pucnhAttendance);        }        if (view.getId() == R.id.iv_choose) {            PopupMenu popup = new PopupMenu(this, iv_choose);            //Inflating the Popup using xml file            popup.getMenuInflater().inflate(R.menu.dash_menu, popup.getMenu());            //registering popup with OnMenuItemClickListener            popup.setOnMenuItemClickListener(item -> {                switch (item.getItemId()) {                    case R.id.privacy_policy:                        Uri uri = Uri.parse(Cons.serverUrl+"Privacy_Policy.html"); // missing 'http://' will cause crashed                        Intent intent = new Intent(Intent.ACTION_VIEW, uri);                        startActivity(intent);                        return true;                    case R.id.logout:                        showLogoutAlert();                        return true;                    default:                        //default intent                        return true;                }            });            popup.show(); //showing popup menu        }    }    private void showLogoutAlert() {        AlertDialog.Builder builder = new AlertDialog.Builder(this);        builder.setMessage("Do you want to Logout from the app?")                .setCancelable(false)                .setPositiveButton("Yes", (dialog, id) -> {                    appSession.setLogin(false);                    appSession.setUsername(null);                    appSession.setNameofMandi(null);                    appSession.setMandiUniqueId(null);                    appSession.setAddressofMandi(null);                    appSession.setEmployeeUserId(null);                    appSession.setAccessToken(null);                    Intent i = new Intent(Activity_MainDashboard.this, LoginActivity.class);                    startActivity(i);                    finish();                })                .setNegativeButton("No", (dialog, id) -> dialog.cancel());        AlertDialog alert = builder.create();        alert.show();    }}