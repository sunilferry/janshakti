package apps.janshakti.allactivities;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.ImageView;import com.google.android.material.textfield.TextInputEditText;import com.google.android.material.textfield.TextInputLayout;import com.google.gson.JsonObject;import apps.janshakti.R;import apps.janshakti.activity.BaseActivity;import apps.janshakti.callbacks.VerifyOtpCallback;import apps.janshakti.model.OtpResponse;public class ChangePasswordActivity extends BaseActivity implements View.OnClickListener, VerifyOtpCallback {    private ImageView back_iv;    private TextInputEditText etold_password, etnew_password, etconfirm_new_password;    private TextInputLayout txt_old_password, txt_new_password, txt_confirm_new_password;    private String oldPassword = "", newPassword = "", confirm = "";    private Button btn_submit;    private static final String TAG = "ChangePasswordActivity";    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity__change_password);        back_iv = findViewById(R.id.back_iv);        back_iv.setOnClickListener(this);        txt_old_password = findViewById(R.id.til_old_password);        txt_new_password = findViewById(R.id.til_new_password);        txt_confirm_new_password = findViewById(R.id.til_confirm_password);        etold_password = findViewById(R.id.et_old_password);        etnew_password = findViewById(R.id.et_new_password);        etconfirm_new_password = findViewById(R.id.et_confirm_password);        btn_submit = findViewById(R.id.btn_submit);        btn_submit.setOnClickListener(this);    }    @Override    public void onBackPressed() {        finish();    }    @Override    public void onClick(View view) {        if (view.getId() == R.id.back_iv) {            finish();        } else if (view.getId() == R.id.btn_submit) {            oldPassword = etold_password.getText().toString().trim();            newPassword = etnew_password.getText().toString().trim();            confirm = etconfirm_new_password.getText().toString().trim();            if (isConnected()) {                if (allfieldsverification()) {                    JsonObject jsonObject = new JsonObject();                    jsonObject.addProperty("OldPassword", oldPassword);                    jsonObject.addProperty("NewPassword", newPassword);                    jsonObject.addProperty("CIPAddress", getIpAddress());                    Log.d(TAG, "onClick: " + jsonObject);                    showLoader();                    webApiCalls.changePassword(this::onOtpVerifyResponse, appSession.getAccessToken(), jsonObject);                }            } else {                showAlert(getString(R.string.no_internet), "");            }        }    }    private boolean allfieldsverification() {        boolean check = false;        if (oldPassword.equalsIgnoreCase("")) {            txt_old_password.setErrorEnabled(true);            txt_old_password.setError(getString(R.string.enter_old_password));        } else if (newPassword.equalsIgnoreCase("")) {            txt_new_password.setErrorEnabled(true);            txt_new_password.setError(getString(R.string.enter_new_password));        } else if (confirm.equalsIgnoreCase("")) {            txt_confirm_new_password.setErrorEnabled(true);            txt_confirm_new_password.setError(getString(R.string.enter_confirm_password));        } else if (!confirm.equals(newPassword)) {            txt_confirm_new_password.setErrorEnabled(true);            txt_confirm_new_password.setError(getString(R.string.password_not_matched));        } else {            check = true;        }        return check;    }    @Override    public void onOtpVerifyResponse(OtpResponse otpResponse) {        Log.d(TAG, "onOtpVerifyResponse: " + otpResponse.getMessage());        try {            hideLoader();            toast(otpResponse.getMessage());        } catch (Exception e) {        }    }}